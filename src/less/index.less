/* 定义变量 */
@color: #4d926f;
/* 将变量应用到元素中 */
#header {
	color: @color;
}

/* 变量计算 */
@nice-blue: #5b83ad;
@light-blue: @nice-blue + #111;
#lessCompute {
	color: @light-blue;
}

/* 定义一个变量名为变量(没效果) */
@color2: #253636;
@highlight2: "color2";

/* 混入-Mixins */
/* 混入其实就是一种嵌套，它充许你将一个类嵌入到另一个类中，而被嵌入的这个类也称为是一个变量 */
/* 先定义一个类 */
.roundedCorners(@radius:5px){ /* 给参数定义一个默认值,注意一定要有括号，就算没有参数也得要括号 */
	border: 1px solid @color2;
	-moz-border-radius: @radius;
	-webkit-border-radius: @radius;
	border-radius: @radius;
}
/* 将定义的类应用到另一个类中 */
#lessMixins {
	.roundedCorners;
}
#lessMixinsVar {
	.roundedCorners(10px); /* 给minxin类传入参数 */
}

/* Mixins的arguments变量,类似js里的arguments */
.boxShadow(@x:0,@y:0,@blur:1px,@color:#000){
	border: 1px solid @color2;
	-moz-box-shadow: @arguments;
	-webkit-box-shadow: @arguments;
	box-shadow: @arguments;
}
#lessMixinsArgs {
	.boxShadow(2px,2px,3px,#f36);
}

/* less中的嵌套 */
#testNesting {
	display: inline;
	float: left;
	h1 {
		font-size: 26px;
		font-weight: bold;
		a {
			text-decoration: none;
			color: #f36;
			/* 如果要在元素上加伪类或伪元素，就要在里面加上& */
			&:hover {
				text-decoration:underline;
				color: #63f;
			}
		}
	}
	p {
		font-size: 12px;
	}
}